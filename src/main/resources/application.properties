# ===============================
# = DATA SOURCE
# ===============================

# Server Port
server.port = 8080

# Liquibase config 
spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml
spring.liquibase.default-schema=u347172802_db_user

# Heroku configurations
spring.application.name=user-service
spring.security.user.password= password
spring.profiles= heroku
eureka.client.serviceUrl.defaultZone= ${EUREKA_URL:http://user:password@localhost:8761}/eureka/
eureka.instance.hostname= ${DOMAIN_NAME}
eureka.instance.nonSecurePort= 80
eureka.password= ${USER_PASSWORD:password}

# Connection url for the database
spring.datasource.url = jdbc:mysql://sql732.main-hosting.eu:3306/u347172802_db_user?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Username and password
spring.datasource.username = u347172802_admin_user
spring.datasource.password = ${DB_PASSWORD}


# Email configurations
spring.mail.host = smtp.hostinger.com
spring.mail.port = 587
spring.mail.username = noreply@springwebstore.com
spring.mail.password = ${HOSTINGER_EMAIL_PASS}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.transport.protocol=true
spring.mail.properties.mail.debug=true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

cart.service.url = https://spring-store-cart-service.herokuapp.com
product.service.url = https://spring-store-product-service.herokuapp.com
user.service.url = https://spring-store-user-service.herokuapp.com

# ===============================
# = JPA / HIBERNATE
# ===============================

# Hibernate - Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.use-new-id-generator-mappings= false

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# ===============================
# = Eclipse plugin - ANSI Escape in Console
# ===============================
# To install the plugin in Eclipse select Help -> Install New Software... and click "Add.." to add the following URL:
# http://www.mihai-nita.net/eclipse
spring.main.banner-mode=off
spring.output.ansi.enabled=ALWAYS

activated.users.regex=.*@springstore-test\.com
