version: 2.1

jobs:
  build-and-test:
    environment:
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Unit Tests Build Job
          command: mvn test
      - run:
          name: Create Test reports folder
          command: mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - run:
          name: Save Test reports
          command: find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
      - store_test_results:
          path: /tmp/circleci-test-results/junit
      - run:
          name: SonarCloud Analyze
          command: mvn verify sonar:sonar -Dsonar.projectKey=SpringStoreOrg_com-boot-user-service

  #trigger the com-boot-user-service-it pipeline
  trigger-com-boot-user-service-it-pipeline:
    docker: 
      - image: cimg/base:2023.01
    steps:
      - run:
          name: Ping another pipeline - com-boot-user-service-it
          command: |
            CREATED_PIPELINE=$(curl --request POST \
              --url https://circleci.com/api/v2/project/github/SpringStoreOrg/com-boot-user-service-it/pipeline \
              --header "Circle-Token: $API_TOKEN_com_boot_user_service_it" \
              --header "content-type: application/json" \
              --data '{"parameters":{"triggering-pipeline-id":"<< pipeline.id >>"}}' \
            | jq -r '.id'
            )
            echo "my created pipeline"
            echo $CREATED_PIPELINE
            mkdir ~/workspace
            echo $CREATED_PIPELINE > pipeline.txt
      - persist_to_workspace:
          root: .
          paths: 
            - pipeline.txt  

  #check the status for com-boot-user-service-it triggered pipeline
  check-status-of-triggered-pipeline:
    docker: 
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Check triggered workflow status
          command: |
            triggered_pipeline_id=$(cat workspace/pipeline.txt)
            created_workflow_status=$(curl --request GET \
                --url "https://circleci.com/api/v2/pipeline/${triggered_pipeline_id}/workflow" \
                --header "Circle-Token: $API_TOKEN_com_boot_user_service_it" \
                --header "content-type: application/json" \
              | jq -r '.items[0].status'
            )
            echo $created_workflow_status
            if [[ "$created_workflow_status" != "success" ]]; then
              echo "Workflow not successful - ${created_workflow_status}"
              (exit -1) 
            fi
            
            echo "Created workflow successful"

workflows:
  mvn-build-and-test:
    jobs:
      - build-and-test
      - trigger-com-boot-user-service-it-pipeline:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - wait-for-triggered-pipeline:
          type: approval
          requires: 
            - trigger-com-boot-user-service-it-pipeline
      - check-status-of-triggered-pipeline:
          requires:
            - wait-for-triggered-pipeline       
