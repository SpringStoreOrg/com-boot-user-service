version: 2.1

jobs:
  build-and-test:
    environment:
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - run: find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
      - store_test_results:
          path: /tmp/circleci-test-results/junit
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar -Dsonar.projectKey=GeorgeT88_com-boot-user-service
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $API_TOKEN_IT # this env var must be set within the project    
      - run:
          name: Trigger the IT Build Job
          command: |
              PIPELINE_ID=$(curl --location --request POST "https://circleci.com/api/v2/project/github/GeorgeT88/com-boot-user-service-it/pipeline" \
              --header "Content-Type: application/json" \
              --header "Circle-Token: $API_TOKEN_IT" |  jq -r '.id')
              PIPELINE=$PIPELINE_ID
              echo "export PIPELINE=$PIPELINE_ID" >> $BASH_ENV
      - run:
          name: check the IT Build Job
          command: |
              STATUS=$(curl "https://circleci.com/api/v2/pipeline/$PIPELINE/workflow?circle-token=$API_TOKEN_IT" | jq -r '.items[].status')
              echo $STATUS
              while [ "$STATUS" == "running" ]; do
                echo still running
                sleep 10
                STATUS=$(curl -s "https://circleci.com/api/v2/pipeline/$PIPELINE/workflow?circle-token=$API_TOKEN_IT" | jq -r '.items[].status')
              done

              echo "finally done, checking final status: $STATUS"
              if [[ "$STATUS" == "success" ]]; then
                echo "Proceeding with build, as triggered pipeline was success"
              else
                echo "Stopping build, triggered pipeline was not a success"
              fi

workflows:
  test user service: 
    jobs:
      - build-and-test 